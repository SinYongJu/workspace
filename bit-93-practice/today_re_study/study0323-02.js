/*
함수 클로저2
함수안에 함수!, 메모리를 따로 관리한다.
클로저가 사용하는 변수가 글로벌 변수가 아니라
바깥 함수의 로컬변수라면 호출 이후에 제거되어

나중에 클로저가 호출될 때 사용할 수 없는 문제가 있다.
그래서 로컬변수를 사용할 때는 로컬 변수를 자체 메모리에 복제해둔다
이렇게 복제해 두면 바깥 함수의 호출이 끝나서 로컬 변수가 제거된다 하더라도
자체 복제해둔 변수가 있기 때문에 계쏙 유효하게 사용 가능 하다!
*/

"use strict"

var arr = ["홍길동", "임꺽정", "유관순", "안중근", "윤봉길"]
var count = -1;

//클로저가 자체 변수를 사용하기전
//클로저가 글로벌 변수 count를 사용한다.

function other() {
  count++

  return function() {
    console.log(arr[count])
  }
}
console.log(arr[count])
var f1 = other();
var f2 = other();
var f3 = other();
var f4 = other();
var f5 = other();




//글로벌 변수 count에의해서 실행된 클로저는 총 5회의 함수들에 의해
// 변수의 값이 4까지 커진다.
// 함수 5개의 실행에 의해 클로저에는 count라는 변수의 값은 4가 된다!.
f1()
f2()
f3()
f4()
f5()
